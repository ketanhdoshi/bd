## Overriding values for Chart's values.yaml
## Example values to run Confluent Operator in Private Cloud
global:
  provider:
    name: private
    ## if any name which indicates regions
    ##
    region: anyregion
    ##
    ## Docker registry endpoint where Confluent Images are available.
    ##
    registry:
      fqdn: docker.io
      credential:
        required: false
  storageClassName: local-storage
  telemetry:
    enabled: false
  sasl:
    plain:
      username: test
      password: test123
  authorization:
    rbac:
      enabled: false
    simple:
      enabled: false
    superUsers: []
  dependencies:
    mds:
      endpoint: ""
      publicKey: ""
## Zookeeper cluster
##
zookeeper:
  name: zookeeper
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 512Mi
  ## Volume size
  ## Don't change the sequence
  volume:
    data: 100Mi
    txnlog: 100Mi
  ## JVM configuration
  ##
  jvmConfig:
    heapSize: 512M

## Kafka Cluster
##
kafka:
  name: kafka
  replicas: 1
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
  #### For nodePort based external access
  nodePort:
    enabled: true
    ## [Required] Host is used to configure Kafka's external listener
    host: 192.168.65.3
    portOffset: 30220
  loadBalancer:
    enabled: false
    domain: ""
  tls:
    enabled: false
    fullchain: |-
    privkey: |-
    cacerts: |-
  metricReporter:
    enabled: true
    bootstrapEndpoint: kafka:9071
  ## Volume size
  volume:
    data0: 200Mi
  ## JVM configuration
  jvmConfig:
    heapSize: 512M
  configOverrides:
    server:
    - auto.create.topics.enable=true
    - confluent.reporters.telemetry.auto.enable=false
    - confluent.support.metrics.enable=false
    - confluent.license.topic.replication.factor=1
  ##  log4j:
  ##  - log4j.rootLogger=DEBUG, stdout

## Connect Cluster
##
connect:
  name: connectors
  image:
    repository: kd/kafkaconnect
    tag: latest
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 256Mi  
  ## JVM configuration 
  jvmConfig:
    heapSize: 512M
  tls:
    enabled: false
    ## "" for none, "tls" for mutual auth
    authentication:
      type: ""
    fullchain: |-
    privkey: |-
    cacerts: |-
  loadBalancer:
    enabled: false
    domain: ""
  dependencies:
    kafka:
      bootstrapEndpoint: kafka:9071
      brokerCount: 1
    schemaRegistry:
      enabled: true
      url: http://schemaregistry:8081

## Replicator Connect Cluster
##
replicator:
  name: replicator
  replicas: 1
  tls:
    enabled: false
    authentication:
      type: ""
    fullchain: |-
    privkey: |-
    cacerts: |-
  loadBalancer:
    enabled: false
    domain: ""
  dependencies:
    kafka:
      brokerCount: 1
      bootstrapEndpoint: kafka:9071
##
## Schema Registry
##
schemaregistry:
  name: schemaregistry
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 256Mi  
  tls:
    enabled: false
    authentication:
      type: ""
    fullchain: |-
    privkey: |-
    cacerts: |-
  loadBalancer:
    enabled: false
    domain: ""
  dependencies:
    kafka:
      brokerCount: 1
      bootstrapEndpoint: kafka:9071
  ## JVM configuration 
  jvmConfig:
    heapSize: 512M

##
## KSQL
##
ksql:
  name: ksql
  replicas: 1
  resources:
    requests:
      cpu: 100m
      memory: 256Mi  
  ## JVM configuration 
  jvmConfig:
    heapSize: 512M
  ## Volume size
  volume:
    data: 100Mi
  tls:
    enabled: false
    authentication:
      type: ""
    fullchain: |-
    privkey: |-
    cacerts: |-
  loadBalancer:
    enabled: false
    domain: ""
  dependencies:
    kafka:
      brokerCount: 1
      bootstrapEndpoint: kafka:9071
      brokerEndpoints: kafka-0.kafka:9071
    schemaRegistry:
      enabled: true
      tls:
        enabled: false
        authentication:
          type: ""
      url: http://schemaregistry:8081

## Control Center (C3) Resource configuration
##
controlcenter:
  name: controlcenter
  resources:
    requests:
      cpu: 100m
      memory: 256Mi  
  ## JVM configuration 
  jvmConfig:
    heapSize: 512M
  license: ""
  ## Volume size
  volume:
    data0: 100Mi
  ##
  ## C3 dependencies
  ##
  dependencies:
    c3KafkaCluster:
      brokerCount: 1
      bootstrapEndpoint: kafka:9071
      zookeeper:
        endpoint: zookeeper:2181
    connectCluster:
      enabled: true
      url: http://connectors:8083
    ksql:
      enabled: true
      url: http://ksql:9088
    schemaRegistry:
      enabled: true
      url: http://schemaregistry:8081
  ##
  ## C3 External Access
  ##
  loadBalancer:
    enabled: false
    domain: ""
  ##
  ## TLS configuration
  ##
  tls:
    enabled: false
    authentication:
      type: ""
    fullchain: |-
    privkey: |-
    cacerts: |-
  ##
  ## C3 authentication
  ##
  auth:
    basic:
      enabled: true
      ##
      ## map with key as user and value as password and role
      property:
        admin: Developer1,Administrators
        disallowed: no_access
